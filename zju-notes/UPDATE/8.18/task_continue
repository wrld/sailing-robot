#!/usr/bin/env python
import rospy
from std_msgs.msg import Float32
from std_msgs.msg import Float64
from std_msgs.msg import Int16

guagua_taskix = -1


def task_continue():
    global guagua_taskix
    pub_task_ix = rospy.Publisher("last_task",Int16,queue_size=10)
    rate = rospy.Rate(rospy.get_param("config/rate"))

    while not rospy.is_shutdown():
        pub_task_ix.publish(guagua_taskix)
        # rospy.logwarn("in tack_continue guagua_taskix = " + str(guagua_taskix))
        rate.sleep()

def update_task_ix(ix):
    global guagua_taskix
    guagua_taskix = ix


if __name__ == '__main__':
    rospy.init_node('task_continue', anonymous=True)
    rospy.Subscriber('task_ix', Int16, update_task_ix)

    pub_task_ix = rospy.Publisher("last_task",Int16,queue_size=10)
    pub_task_ix.publish(guagua_taskix)

    try:
        task_continue()
    except rospy.ROSInterruptException:
        pass
