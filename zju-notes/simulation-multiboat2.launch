<launch>
    <!--
    General test file to launch all existing nodes to talk to real hardware
    -->
 <group ns = "whole">
<!--
Parameters
-->

<rosparam file="$(find sailing_robot)/launch/parameters/default.yaml" command="load"/>

<rosparam file="$(find sailing_robot)/launch/parameters/calibration_laser.yaml" ns="/calibration" command="load"/>
<rosparam file="$(find sailing_robot)/launch/parameters/sailsettings_blackpython.yaml" command="load"/>
<rosparam file="$(find sailing_robot)/launch/parameters/simulation_waypoints.yaml" command="load"/>
<!--rosparam file="$(find sailing_robot)/launch/parameters/eastleigh_waypoints.yaml" command="load"/-->
<!--changed rosparam file="$(find sailing_robot)/launch/parameters/archive/Horten/horten_fleetrace_waypoints.yaml" command="load"/-->

<rosparam file="$(find sailing_robot)/launch/parameters/simulator.yaml" command="load"/>

<node name = "communicator" pkg="sailing_robot" type = "communicator" />
     
    <group ns = "pirate">
        <!--
        Parameters
        -->
        <param name = "simulation/boatColour/red" value = "0"/>
        <param name = "simulation/boatColour/green" value = "0"/>
        <param name = "simulation/boatColour/blue" value = "255"/>

        <rosparam file="$(find sailing_robot)/launch/parameters/default.yaml" command="load"/>

        <rosparam file="$(find sailing_robot)/launch/parameters/calibration_laser.yaml" ns="/calibration" command="load"/>
        <rosparam file="$(find sailing_robot)/launch/parameters/sailsettings_blackpython.yaml" command="load"/>
        <rosparam file="$(find sailing_robot)/launch/parameters/simulation_waypoints.yaml" command="load"/>
        <!--rosparam file="$(find sailing_robot)/launch/parameters/eastleigh_waypoints.yaml" command="load"/-->
        <!--changed rosparam file="$(find sailing_robot)/launch/parameters/archive/Horten/horten_fleetrace_waypoints.yaml" command="load"/-->

        <rosparam file="$(find sailing_robot)/launch/parameters/simulator.yaml" command="load"/>


        <!--
        Nodes
        -->
        <node name = "tasks" pkg="sailing_robot" type = "tasks" />
        <node name = "tack" pkg="sailing_robot" type = "tack" />
        <node name = "actuator_demand_rudder" pkg="sailing_robot" type = "actuator_demand_rudder" />
        <node name = "actuator_demand_sail" pkg="sailing_robot" type = "actuator_demand_sail" />
        <node name = "simulation_position" pkg='sailing_robot' type="simulation_position"/>
        <node name = "simulation_velocity" pkg='sailing_robot' type="simulation_velocity"/>
        <node name = "simulation_wind_apparent" pkg="sailing_robot" type="simulation_wind_apparent" />
        <node name = "simulation_heading" pkg="sailing_robot" type="simulation_heading" />
        <node name = "sensor_processed_wind_direction" pkg="sailing_robot" type="sensor_processed_wind_direction" />
        <node name = "simulation_gps_fix" pkg="sailing_robot" type="simulation_gps_fix" />
        <node name="debugging_2D_plot" pkg='sailing_robot' type="debugging_2D_plot"/>
       <!--node name="debugging_2D_plot_matplot" pkg='sailing_robot' type="debugging_2D_plot_matplot"/-->
        <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0.0 0.0 0.0 0.0 0.0 0.0 map my_frame 100" />

    </group>

    <group ns = "greenBoat">
        <!--
        Parameters
        -->
        <param name = "simulation/boatColour/red" value = "255"/>
        <param name = "simulation/boatColour/green" value = "0"/>
        <param name = "simulation/boatColour/blue" value = "0"/>

        <rosparam file="$(find sailing_robot)/launch/parameters/default.yaml" command="load"/>
        <rosparam file="$(find sailing_robot)/launch/parameters/calibration_laser.yaml" ns="/calibration" command="load"/>
       <rosparam file="$(find sailing_robot)/launch/parameters/sailsettings_blackpython.yaml" command="load"/>
        <rosparam file="$(find sailing_robot)/launch/parameters/archive/Horten/horten_wp/area_scanning_gen_area.yaml" command="load"/>

        <!-- changed rosparam file="$(find sailing_robot)/launch/parameters/simulation_waypoints.yaml" command="load"/-->
        <!--rosparam file="$(find sailing_robot)/launch/parameters/eastleigh_waypoints.yaml" command="load"/-->

        <rosparam file="$(find sailing_robot)/launch/parameters/simulator.yaml" command="load"/>


        <!--
        Nodes
        -->
        <node name = "tasks" pkg="sailing_robot" type = "tasks" />
        <node name = "tack" pkg="sailing_robot" type = "tack" />
        <node name = "actuator_demand_rudder" pkg="sailing_robot" type = "actuator_demand_rudder" />
        <node name = "actuator_demand_sail" pkg="sailing_robot" type = "actuator_demand_sail" />
        <node name = "simulation_position" pkg='sailing_robot' type="simulation_position"/>
        <node name = "simulation_velocity" pkg='sailing_robot' type="simulation_velocity"/>
        <node name = "simulation_wind_apparent" pkg="sailing_robot" type="simulation_wind_apparent" />
        <node name = "simulation_heading" pkg="sailing_robot" type="simulation_heading" />
        <node name=  "debugging_2D_plot" pkg='sailing_robot' type="debugging_2D_plot"/>
        <node name = "simulation_gps_fix" pkg="sailing_robot" type="simulation_gps_fix" />
        <node name = "sensor_processed_wind_direction" pkg="sailing_robot" type="sensor_processed_wind_direction" />
        <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0.0 0.0 0.0 0.0 0.0 0.0 map my_frame 100" />

    </group>
     
 </group>
 </launch>

